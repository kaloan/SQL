GO
CREATE DATABASE hospital
GO
USE hospital

CREATE TABLE DOCTOR
(
	DOCTORID INT IDENTITY(1,1),
	NAME VARCHAR(64) NOT NULL,
	SPECIALIZATION VARCHAR(12) CHECK(SPECIALIZATION IN ('GP', 'Surgery', 'Dermatology', 'Neurology', 'Rheumatology')) NOT NULL,
	GRADUATIONDATE DATE DEFAULT GETDATE() NOT NULL,
	LICENCE VARCHAR(14) NOT NULL,
	CHECK (	(SPECIALIZATION='GP' AND LICENCE LIKE 'GP-________') OR 
								(SPECIALIZATION!='GP' AND LICENCE LIKE 'SP-__-________') )
);

ALTER TABLE DOCTOR ADD CONSTRAINT PK_DOCTORID PRIMARY KEY(DOCTORID)
ALTER TABLE DOCTOR ADD CONSTRAINT UQ_LICENCE UNIQUE(LICENCE)


CREATE TABLE PATIENT
(
	PATIENTID INT IDENTITY(1,1),
	NAME VARCHAR(64) NOT NULL,
	NIN CHAR(10) NOT NULL,
	ADDRESS VARCHAR(256),
	EMAIL VARCHAR(128)
);

ALTER TABLE PATIENT ADD CONSTRAINT PK_PATIENTID PRIMARY KEY(PATIENTID)
ALTER TABLE PATIENT ADD CONSTRAINT UQ_ID UNIQUE(NIN)


CREATE TABLE  EXAMINATION
(
	EXAMINATIONID INT IDENTITY(1,1),
	DOCTORID INT NOT NULL,
	PATIENTID INT NOT NULL,
	EXAMINATIONDATE DATETIME NOT NULL,
	REFERALEXAM INT
);

ALTER TABLE EXAMINATION ADD CONSTRAINT PK_EXAMINATIONID PRIMARY KEY(EXAMINATIONID)
ALTER TABLE EXAMINATION ADD CONSTRAINT UQ_MAX_ONE_EXAM_PER_DAY UNIQUE(DOCTORID,PATIENTID,EXAMINATIONDATE)
ALTER TABLE EXAMINATION ADD CONSTRAINT FK_EXAMINATION_DOCTOR FOREIGN KEY(DOCTORID) REFERENCES DOCTOR(DOCTORID)
ALTER TABLE EXAMINATION ADD CONSTRAINT FK_EXAMINATION_PATIENT FOREIGN KEY(PATIENTID) REFERENCES PATIENT(PATIENTID)

DROP TABLE EXAMINATION

GO

GO
CREATE VIEW ExamView AS
SELECT	d.DOCTORID AS DOCTOR_ID, d.NAME AS DOCTOR_NAME, p.NIN AS PATIENT_NIN, p.NAME AS PATIENT_NAME, 
		CAST(e.EXAMINATIONDATE AS DATE) AS EXAM_DATE 
FROM DOCTOR d
JOIN EXAMINATION e ON e.DOCTORID=d.DOCTORID
JOIN PATIENT p ON p.PATIENTID=e.PATIENTID
GO

DROP VIEW ExamView

GO
CREATE TRIGGER INSTRIG ON ExamView INSTEAD OF INSERT
AS
	IF ( SELECT COUNT(*) FROM inserted) > 1
	BEGIN
		PRINT 'ERROR: MORE THAN 1 INSERT'
	END
	ELSE
	BEGIN
		IF NOT EXISTS	(SELECT * 
						FROM DOCTOR d 
						JOIN inserted i ON i.DOCTOR_ID=d.DOCTORID
						WHERE d.SPECIALIZATION='GP')
		BEGIN
			PRINT 'ERROR: NO SUCH DOCTOR OR DOCTOR IS NOT GP'
		END
		ELSE
		BEGIN
			IF NOT EXISTS (SELECT * FROM PATIENT p JOIN inserted i ON p.NIN=i.PATIENT_NIN)
			BEGIN
				INSERT INTO PATIENT(NAME,NIN) (SELECT PATIENT_NAME AS NAME,PATIENT_NIN AS NIN FROM inserted)
			END
			INSERT INTO EXAMINATION(DOCTORID,PATIENTID,EXAMINATIONDATE) 
						(SELECT i.DOCTOR_ID AS DOCTORID,p.PATIENTID AS PATIENTID, i.EXAM_DATE AS EXAMINATIONDATE 
						FROM inserted i
						JOIN PATIENT p ON p.NIN=i.PATIENT_NIN)
		END
	END
GO

INSERT INTO DOCTOR(NAME,SPECIALIZATION,LICENCE) VALUES('TESTDOC','GP','GP-12345678')

INSERT INTO ExamView VALUES (1,'TESTDOC',1112223334,'TESTPATIENT',GETDATE())

SELECT *
FROM DOCTOR
SELECT *
FROM PATIENT
SELECT *
FROM EXAMINATION

GO
CREATE TRIGGER REFERALREQ ON EXAMINATION AFTER INSERT
AS
	--UPDATE inserted SET REFERALEXAM=NULL WHERE DOCTORID IN 
	--		(SELECT d.DOCTORID FROM DOCTOR d WHERE d.SPECIALIZATION='GP')

	IF EXISTS	(SELECT * 
				FROM inserted i 
				JOIN DOCTOR d ON d.DOCTORID=i.DOCTORID
				JOIN EXAMINATION e ON e.EXAMINATIONID=i.REFERALEXAM
				JOIN DOCTOR rd ON rd.DOCTORID=e.DOCTORID
				WHERE d.SPECIALIZATION!='GP' AND rd.SPECIALIZATION!='GP')
	BEGIN
		PRINT 'ERROR: REFERALEXAM MUST REFER TO A GP EXAMINATION'
		ROLLBACK
	END
GO

ALTER TABLE EXAMINATION DISABLE TRIGGER REFERALREQ